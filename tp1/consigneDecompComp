1)construction
2)decomposition

3)zero pour les valeurs insignifiante (<paramètre donnée)

4) 2 évaluations d'erreur :	
  _ max de chaque indice (compare avant/après) de tout le tableau : on a qu'une seule valeur qui sera le max des erreurs
  _ somme de chaque terme : on fait la somme de chaque erreur (attention aux valeurs absolues)

5) courbe différence par rapport au paramètre de zéro : pour chaque paramètre de zero, on affiche la valeur de l'evaluation

6bonus) afficher la courbe de base et les différentes courbes en fonction des paramètres zero

tableau de float !

generer tableau : evaluer fonction ou web
a voir : quand courbe augmente coeff de plus en plus grand 
	  quand courbe varie coeff bas

Langage choisi : 
Python

Affichage de courbes :
GNU Plot


11/10

Une fois finie on applique les formules pour des courbes multivues (polygones)
Cette fois on aura 2 coordonnées X et Y (deux tableaux ...)

Attention pour l'erreur : Les détails vont être des vecteurs donc le paramètre sera sur la norme du vecteur (rac(x2 + y2))
De manière générale, à chaque fois qu'on aura une valeur absolue on utilisera la norme

Polygones fermés donc i + 1 = (i + n) mod n

S'arrêter à 3 sommets pour pouvoir dessiner le polygone, puis toutes les étapes avec ou sans les détails

Affichage en postscript 
"%!PS"
100 10 moveto
13 32 lineto
-> ghostview / gv / ghostscript




